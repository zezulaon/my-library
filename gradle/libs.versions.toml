[versions]
androidGradlePlugin = "8.1.1"
kotlin = "1.9.20"
androidxCore = "1.12.0"
androidxLifecycle = "2.6.2"
androidxActivity = "1.8.0"
androidxComposeCompiler = "1.5.4"
androidxComposeBom = "2023.10.01"
activityKtx = "2.6.2"
androidxNavigation = "1.7.2"
androidxRoom = "2.6.0"
androidxTestExt = "1.1.5"
androidxTestRunner = "1.5.2"
# https://developer.android.com/training/testing/espresso/setup (espresso requires test runner)
androidxEspresso = "3.5.1"
coroutines = "1.7.3"
junit = "4.13.2"
koinAdroidCompose = "3.4.1"
koinAdroid = "3.3.2"
koinTest = "3.3.2"
desugarJdk = "2.0.4"
googleGmsServices = "4.3.15"
androidGmsServices = "20.7.0"
androidGmsServicesBarcodeScanning = "18.1.0"
mlkitBarcode = "17.2.0"
cameraVersion = "1.3.0"
firebaseBom = "32.5.0"
crashlyticsPlugin = "2.9.9"
retrofit = "2.9.0"
loggingInterceptor = "4.10.0"
accompanistPermissions = "0.28.0"
glide = "4.16.0"
glideCompose = "1.0.0-alpha.6"
timber = "5.0.1"
turbine = "0.12.1"
ksp = "1.9.20-1.0.14"
ktlint = "0.48.2"
spotless = "6.13.0"
mockitoCore = "5.0.0"
mockitoKotlin = "4.1.0"

[libraries]
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidxCore" }

# Android lifecycle
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidxLifecycle" }

# UI
androidx-activity-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "activityKtx" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidxActivity" }

# UI - Compose
androidx-compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "androidxComposeCompiler" }

androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "androidxComposeBom" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3" }
androidx-compose-ui = { module = "androidx.compose.ui:ui" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
androidx-compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4" }
androidx-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }

# UI - Navigation
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidxNavigation" }

# Accomponist
google-accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistPermissions" }

# Room
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidxRoom" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidxRoom" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidxRoom" }

# Glide
bumptech-glide-compose = { module = "com.github.bumptech.glide:compose", version.ref = "glideCompose" }
bumptech-glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
bumptech-glide-compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }

# Koin DI
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koinAdroid" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinAdroidCompose" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koinTest" }
koin-test-junit4 = { module = "io.insert-koin:koin-test-junit4", version.ref = "koinTest" }

# Coroutines
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

# Turbine
app-cash-turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

# HTTP/REST/JSON/XML
squareup-retrofit2 = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
squareup-retrofit2-converter-simplexml = { module = "com.squareup.retrofit2:converter-simplexml", version.ref = "retrofit" }
squareup-retrofit2-converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
squareup-okhttp3-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }

# JUnit/Tests
junit = { module = "junit:junit", version.ref = "junit" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidxTestExt" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidxTestRunner" }
androidx-test-espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "androidxEspresso" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockitoCore" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }

# Accessing new Java APIs through desugaring (LocalDateTime for example)
android-tools-desugar-jdk = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugarJdk" }

# Logging
jakewharton-timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

# Firebase
google-firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
google-firebase-firestore = { module = "com.google.firebase:firebase-firestore-ktx" }
google-firebase-auth = { module = "com.google.firebase:firebase-auth-ktx" }
google-firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }

# GMS
google-android-gms-services-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "androidGmsServices" }
# This dependency adds ML model dynamically via Google Play Services (it has to be downloaded on app start)
# google-android-gms-services-mlkit-barcode-scanning = { module = "com.google.android.gms:play-services-mlkit-barcode-scanning", version.ref = "androidGmsServicesBarcodeScanning" }

# ML barcode KIT
google-mlkit-barcode-scanning = { module = "com.google.mlkit:barcode-scanning", version.ref = "mlkitBarcode" }

# Camera
androidx-camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "cameraVersion" }
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "cameraVersion" }
androidx-camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "cameraVersion" }


[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
google-gms-services = { id = "com.google.gms.google-services", version.ref = "googleGmsServices" }
google-firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "crashlyticsPlugin" }
diffplug-spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }

ksp = { id = "com.google.devtools.ksp", version.ref = "ksp"}
